@page "/login"
@using Model.Login
@inject HttpClient http
@inject IJSRuntime JSRuntime
@inject NavigationManager navManager

<div class="container">
    <div class="card o-hidden border-0 shadow-lg my-5">
        <div class="card-body p-0">
            <div class="row">
                <!--imgae-->
                <div class="col-lg-5 d-none d-lg-block bg-login-image"></div>
                <!--other content-->
                <div class="col-lg-7">
                    <div class="p-5">
                        <div class="text-center">
                            <h1 class="h4 text-gray-900 mb-4">Login</h1>
                        </div>

                        <EditForm Model="@loginForm" OnValidSubmit="@SubmitLoginForm" class="user">
                            <DataAnnotationsValidator />

                            <div class="form-group">
                                <label>Email</label>
                                <InputText id="username" class="form-control form-control-user"
                                           @bind-Value="loginForm.Email" />
                                <ValidationMessage For="@(() => loginForm.Email)" class="text-danger" />
                            </div>
                            <div class="form-group">
                                <label>Password</label>
                                <InputText id="email" class="form-control form-control-user"
                                           @bind-Value="loginForm.Password" />
                                <ValidationMessage For="@(() => loginForm.Password)" class="text-danger" />
                            </div>
                            <div class="text-danger">@errorMsg</div>
                            <button type="submit" class="btn btn-primary btn-user btn-block" style="margin-top:3em">
                                Login
                            </button>

                        </EditForm>

                        <hr>
                        <div class="text-center">
                            <a class="small" href="/">Never made an account? Register.</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {

    private LoginForm loginForm = new LoginForm();

    private Consumer apiConsumer;

    private string errorMsg = "";

    protected override Task OnInitializedAsync()
    {
        apiConsumer = new Consumer(http, JSRuntime);
        return base.OnInitializedAsync();
    }

    private async Task SubmitLoginForm()
    {
        errorMsg = "";
        LoginIn requestBody = new LoginIn()
        {
            Email = loginForm.Email,
            Password = loginForm.Password
        };

        var apiResponse = await apiConsumer.makeRequest<LoginOut, LoginIn>(MethodType.PUT, "/api/authorization", requestBody);
        var responseCode = apiResponse.Item2;

        switch (responseCode)
        {
            case System.Net.HttpStatusCode.OK:
                LoginOut responseBody = apiResponse.Item1;
                await JSRuntime.InvokeVoidAsync("writeCookie", args: new Object[] 
                    { "sessionID", responseBody.SessionId});

                navManager.NavigateTo("dashboard", forceLoad: true);
                await OnInitializedAsync();
                break;
            case System.Net.HttpStatusCode.Unauthorized:
                errorMsg = "Email or Password is not correct";
                break;
            default:
                errorMsg = "An Unhandled error has occured";
                return;
        }
    }
}
