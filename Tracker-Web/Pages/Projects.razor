@page "/projects"
@page "/projects/{projId}"
@using Tracker_Web.Components
@using Model.User
@using Model.Project
@using Services.EndpointConsumers
@inject HttpClient http
@inject IJSRuntime JSRuntime
@inject NavigationManager navManager

<div class="row">
    <div class="col">
        <div class="row justify-content-start">
            <h1 class="h3 mb-0 text-gray-800">Projects | </h1>
            <div class="dropdown" style="margin-left:1em">
                <button class="btn btn-outline-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @currentProject.Title
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    @foreach (Project proj in projects)
                    {
                        <button class="dropdown-item" type="button" @onclick="() => SelectProject(proj.Id.ToString())">@proj.Title</button>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="row justify-content-end">
            <DeleteProjectModal project="@currentProject"/>
        </div>
    </div>
</div>

<div style="margin-top:1em">
    <MembersList members="@currentProject.Members" />
</div>


@code {

    protected override async Task OnInitializedAsync()
    {
        usersApi = new UsersConsumer(http, JSRuntime, navManager);
        projApi = new ProjectsConsumer(http, JSRuntime);

        currentProject.Members = new List<Guid>();

        currentUser = await usersApi.GetCurrent();
        projects = await projApi.GetList(currentUser.Id);

        ConfigureCurrentProject();

        return;
    }

    [Parameter]
    public string projId { get; set; }

    private UsersConsumer usersApi;
    public User currentUser = new User();

    private ProjectsConsumer projApi;
    private List<Project> projects = new List<Project>();

    private Project currentProject = new Project();

    private void ConfigureCurrentProject()
    {
        foreach (Project proj in projects)
        {
            if (proj.Id.ToString() == projId)
            {
                currentProject = proj;
            }
        }
        if (currentProject.Title == null)
        {
            if (projects.Count > 0)
            {
                currentProject = projects[0];
            }
            else
            {
                navManager.NavigateTo("dashboard", forceLoad: true);
            }
        }
    }

    private void SelectProject(string id)
    {
        string url = "projects/";
        url += id;
        navManager.NavigateTo(url, forceLoad: true);
    }
}