@using Model.Project  
@using Services.EndpointConsumers
@inject HttpClient http
@inject IJSRuntime JSRuntime 
@inject NavigationManager navManager

<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#newProjectModal">
    <i class="fas fa-sm fa-plus"></i>
    Create New Project
</button>

<div class="modal fade" id="newProjectModal" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="newProjectModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newProjectModalLabel">Create New Project</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <EditForm Model="@projectForm" OnValidSubmit="@SubmitProjectForm" class="user">
                    <DataAnnotationsValidator />

                    <div class="form-group">
                        <label>Title</label>
                        <InputText id="title" class="form-control form-control-user"
                                   @bind-Value="projectForm.Title" />
                        <ValidationMessage For="@(() => projectForm.Title)" class="text-danger" />
                    </div>
                    <button type="submit" class="btn btn-primary btn-user btn-block" style="margin-top:3em">
                        Create
                    </button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private NewProjectForm projectForm = new NewProjectForm();

    private ProjectsConsumer projApi;

    protected override Task OnInitializedAsync()
    {
        projApi = new ProjectsConsumer(http, JSRuntime);
        return base.OnInitializedAsync();
    }

    private async Task SubmitProjectForm()
    {
        Guid projectID = await projApi.CreateProject(projectForm.Title);

        navManager.NavigateTo("dashboard", forceLoad: true);
    }
}
